name: main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  push:
  pull_request:

jobs:
  build:
    if: ${{ github.event_name != 'push' || github.ref != 'refs/heads/updates'}}
    strategy:
      fail-fast: false
      matrix:
        include: [
          { msystem: UCRT64, runner: windows-2025, repo: ucrt, new_msys: false},
          { msystem: CLANG64, runner: windows-2025, repo: clang, new_msys: false},
          { msystem: CLANGARM64, runner: windows-11-arm, repo: clangarm, new_msys: true}
        ]
    name: ${{ matrix.msystem }}
    runs-on: ${{ matrix.runner }}
    env:
      mingw_repo_sf: https://sourceforge.net/projects/mingw-updates/files/${{ github.ref_name}}/${{ matrix.repo }}
    steps:
      - name: Gather Facts
        id: facts
        run : |
          Get-PSDrive -PSProvider FileSystem | Format-Table -AutoSize -Wrap
          Get-CIMInstance -Class Win32_Processor | Select-Object -Property Name
          Get-CIMInstance Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum | Format-Table @{n="TotalPhysicalMemory";e={$_.Sum}}
          $BUILD_DRIVE = Split-Path $env:GITHUB_WORKSPACE -Qualifier
          echo "drive=$BUILD_DRIVE" >> $env:GITHUB_OUTPUT

      - name: Setup JIT minidump
        run: |
          Set-Location '${{ runner.temp }}'
          Invoke-WebRequest -Uri 'https://download.sysinternals.com/files/Procdump.zip' -OutFile Procdump.zip
          Expand-Archive Procdump.zip -DestinationPath .
          New-Item -Path '_dumps' -ItemType Directory
          if ($env:RUNNER_ARCH -eq 'ARM64') {
            .\procdump64a.exe -accepteula -ma -i "${{ runner.temp }}/_dumps"
          } else {
            .\procdump64.exe -accepteula -ma -i "${{ runner.temp }}/_dumps"
            .\procdump.exe -accepteula -ma -i "${{ runner.temp }}/_dumps"
          }

      - name: Configure Pagefile
        if: ${{ matrix.msystem != 'CLANGARM64' }}
        # https://github.com/al-cheb/configure-pagefile-action/issues/16
        continue-on-error: true
        uses: al-cheb/configure-pagefile-action@v1.4
        with:
          minimum-size: 4GB
          maximum-size: 16GB
          # Needs to be C:, see https://github.com/al-cheb/configure-pagefile-action/issues/18
          disk-root: "C:"

      - uses: actions/checkout@v4
        with:
          path: temp
          fetch-depth: 0
          filter: blob:none
          persist-credentials: false

      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          install: git python base-devel
          update: true
          location: '${{ steps.facts.outputs.drive }}\M'
          release: ${{ matrix.new_msys }}

      - name: Add staging and ${{ matrix.repo }} repos
        shell: msys2 {0}
        run: |
          cp /etc/pacman.conf /etc/pacman.conf.bak
          grep -qFx '[staging]' /etc/pacman.conf || sed -i '/^# \[staging\]/,/^$/ s|^# ||g' /etc/pacman.conf
          sed -i '1s|^|[${{ matrix.repo }}]\nServer = ${{ env.mingw_repo_sf }}\nSigLevel = Never\n|' /etc/pacman.conf

      - name: Update using staging and ${{ matrix.repo }} repos
        run: |
          msys2 -c 'pacman --noconfirm -Suuy'
          msys2 -c 'pacman --noconfirm -Suu'

      - name: Move Checkout
        run: |
          $path = "${{ steps.facts.outputs.drive }}\_"
          If (Test-Path "$path") { rm -r -fo "$path" }
          Move-Item -Path ".\temp" -Destination "$path"

      - name: CI-Build
        shell: msys2 {0}
        continue-on-error: true
        timeout-minutes: 350
        run: |
          cd "$(cygpath '${{ steps.facts.outputs.drive }}/_')"
          sed -i 's|#PACKAGER="John Doe <john@doe.com>"|PACKAGER="Mehdi Chinoune <mehdi.chinoune@hotmail.com>"\n|g' /etc/makepkg_mingw.conf
          ./.ci/ci-build.sh

      - name: "Upload binaries"
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.msystem }}-packages
          path: ${{ steps.facts.outputs.drive }}/_/artifacts/*.pkg.tar.*
          if-no-files-found: ignore

      - name: "Upload dumps"
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.msystem }}-dumps
          path: ${{ runner.temp }}/_dumps/*.dmp
          if-no-files-found: ignore

  deploy:
    name: Upload ${{ matrix.msystem }} packages
    runs-on: ubuntu-24.04
    container: archlinux:base-devel
    environment: upload-packages
    needs: build
    strategy:
      fail-fast: false
      matrix:
        include: [
          { msystem: UCRT64, repo: ucrt },
          { msystem: CLANG64, repo: clang },
          { msystem: CLANGARM64, repo: clangarm }
        ]
    steps:

      - uses: actions/checkout@v1

      - name: Install required tools
        run: |
          sudo pacman -Syuu --noconfirm
          sudo pacman -Syuu --noconfirm
          sudo pacman -S --noconfirm --needed openssh rsync git

      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.msystem }}-packages
          path: artifacts

      - name: Restore ssh private key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE_KEY_SSH }}
          known_hosts: ${{ secrets.KNOWN_HOSTS_SSH }}

      - name: Download and Update database files
        run: |
          rsync -zarv --include="*/" --include="${{ matrix.repo }}*" --exclude="*" mehdichinoune@frs.sourceforge.net:/home/frs/project/mingw-updates/${{ github.ref_name}}/${{ matrix.repo }}/ myrepo
          repo-add myrepo/${{ matrix.repo }}.db.tar.gz artifacts/*.pkg.tar.*
          rm myrepo/*.old

      - name: Upload package to SF
        run: |
          rsync -t artifacts/*.pkg.tar.* mehdichinoune@frs.sourceforge.net:/home/frs/project/mingw-updates/${{ github.ref_name}}/${{ matrix.repo }}
          rsync -t --copy-links myrepo/* mehdichinoune@frs.sourceforge.net:/home/frs/project/mingw-updates/${{ github.ref_name}}/${{ matrix.repo }}

  check:
    needs: [build]
    runs-on: windows-2025
    env:
      mingw_repo_sf: https://sourceforge.net/projects/mingw-updates/files/ucrt
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: UCRT64-packages
          path: ${{ runner.temp }}/artifacts
      - name: Check whether to Run
        id: check-run
        run: |
          python .ci/ci-check.py --whether-to-run "${{ runner.temp }}/artifacts"
      - uses: msys2/setup-msys2@v2
        if: steps.check-run.outputs.run == 'true'
        with:
          msystem: UCRT64
          update: true
          install: mingw-w64-ucrt-x86_64-python-pip mingw-w64-ucrt-x86_64-python-pacdb
      - name: Add staging and ucrt repos
        if: steps.check-run.outputs.run == 'true'
        shell: msys2 {0}
        run: |
          sed -i '1s|^|[staging]\nServer = https://repo.msys2.org/staging/\nSigLevel = Never\n|' /etc/pacman.conf
          sed -i '1s|^|[ucrt]\nServer = ${{ env.mingw_repo_sf }}\nSigLevel = Never\n|' /etc/pacman.conf
      - name: Update using staging and ucrt
        if: steps.check-run.outputs.run == 'true'
        run: |
          msys2 -c 'pacman --noconfirm -Suuy'
          msys2 -c 'pacman --noconfirm -Suu'
      - name: Run Checks
        if: steps.check-run.outputs.run == 'true'
        shell: msys2 {0}
        run: |
          python .ci/ci-check.py "${{ runner.temp }}/artifacts"

  package-grokker:
    runs-on: ubuntu-latest
    needs: build
    name: package-grokker-${{ matrix.msystem }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - msystem: UCRT64
            repo: ucrt64
          - msystem: CLANG64
            repo: clang64

    steps:
      - uses: actions/download-artifact@v4
        id: artifacts
        continue-on-error: true
        with:
          name: ${{ matrix.msystem }}-packages
          path: artifacts
      - name: Grok packages
        uses: jeremyd2019/package-grokker/grok-artifacts@main
        if: steps.artifacts.outcome == 'success'
        continue-on-error: true
        with:
          repo: ${{ matrix.repo }}
          path: artifacts
